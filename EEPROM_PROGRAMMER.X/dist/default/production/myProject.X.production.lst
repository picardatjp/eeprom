

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Apr 25 20:54:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F1829 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  018C                     	;# 
   121  018D                     	;# 
   122  018E                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  020D                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0219                     	;# 
   159  021A                     	;# 
   160  021B                     	;# 
   161  021C                     	;# 
   162  021D                     	;# 
   163  021E                     	;# 
   164  021F                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0298                     	;# 
   174  0298                     	;# 
   175  0299                     	;# 
   176  029A                     	;# 
   177  029B                     	;# 
   178  029C                     	;# 
   179  029D                     	;# 
   180  029E                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  0318                     	;# 
   186  0318                     	;# 
   187  0319                     	;# 
   188  031A                     	;# 
   189  038C                     	;# 
   190  038D                     	;# 
   191  038E                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  0394                     	;# 
   196  0395                     	;# 
   197  0396                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0415                     	;# 
   204  0416                     	;# 
   205  0417                     	;# 
   206  041C                     	;# 
   207  041D                     	;# 
   208  041E                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  0111                     	;# 
   272  0112                     	;# 
   273  0113                     	;# 
   274  0114                     	;# 
   275  0115                     	;# 
   276  0116                     	;# 
   277  0117                     	;# 
   278  0118                     	;# 
   279  0119                     	;# 
   280  011A                     	;# 
   281  011B                     	;# 
   282  011D                     	;# 
   283  011E                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  018E                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020D                     	;# 
   306  020E                     	;# 
   307  0211                     	;# 
   308  0211                     	;# 
   309  0212                     	;# 
   310  0212                     	;# 
   311  0213                     	;# 
   312  0213                     	;# 
   313  0214                     	;# 
   314  0214                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0215                     	;# 
   318  0216                     	;# 
   319  0216                     	;# 
   320  0217                     	;# 
   321  0217                     	;# 
   322  0219                     	;# 
   323  021A                     	;# 
   324  021B                     	;# 
   325  021C                     	;# 
   326  021D                     	;# 
   327  021E                     	;# 
   328  021F                     	;# 
   329  0291                     	;# 
   330  0291                     	;# 
   331  0292                     	;# 
   332  0293                     	;# 
   333  0294                     	;# 
   334  0295                     	;# 
   335  0295                     	;# 
   336  0296                     	;# 
   337  0298                     	;# 
   338  0298                     	;# 
   339  0299                     	;# 
   340  029A                     	;# 
   341  029B                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  038C                     	;# 
   354  038D                     	;# 
   355  038E                     	;# 
   356  0391                     	;# 
   357  0392                     	;# 
   358  0393                     	;# 
   359  0394                     	;# 
   360  0395                     	;# 
   361  0396                     	;# 
   362  039A                     	;# 
   363  039C                     	;# 
   364  039D                     	;# 
   365  039E                     	;# 
   366  039F                     	;# 
   367  0415                     	;# 
   368  0416                     	;# 
   369  0417                     	;# 
   370  041C                     	;# 
   371  041D                     	;# 
   372  041E                     	;# 
   373  0FE4                     	;# 
   374  0FE5                     	;# 
   375  0FE6                     	;# 
   376  0FE7                     	;# 
   377  0FE8                     	;# 
   378  0FE9                     	;# 
   379  0FEA                     	;# 
   380  0FEB                     	;# 
   381  0FED                     	;# 
   382  0FEE                     	;# 
   383  0FEF                     	;# 
   384                           
   385                           	psect	idataBANK0
   386  06BA                     __pidataBANK0:
   387                           
   388                           ;initializer for main@F2582
   389  06BA  3455               	retlw	85
   390  06BB  3400               	retlw	0
   391  06BC  34AA               	retlw	170
   392  06BD  3400               	retlw	0
   393  06BE  3455               	retlw	85
   394  06BF  3400               	retlw	0
   395  06C0  34AA               	retlw	170
   396  06C1  3400               	retlw	0
   397  06C2  3455               	retlw	85
   398  06C3  3400               	retlw	0
   399  06C4  34AA               	retlw	170
   400  06C5  3400               	retlw	0
   401  06C6  3455               	retlw	85
   402  06C7  3400               	retlw	0
   403  06C8  34AA               	retlw	170
   404  06C9  3400               	retlw	0
   405  000D                     _PORTBbits	set	13
   406  000C                     _PORTAbits	set	12
   407  000E                     _PORTCbits	set	14
   408  000E                     _PORTC	set	14
   409  000D                     _PORTB	set	13
   410  000C                     _PORTA	set	12
   411  008E                     _TRISC	set	142
   412  008D                     _TRISB	set	141
   413  008C                     _TRISA	set	140
   414  018E                     _ANSELC	set	398
   415  018D                     _ANSELB	set	397
   416  018C                     _ANSELA	set	396
   417                           
   418                           	psect	cinit
   419  07F1                     start_initialization:	
   420                           ; #config settings
   421                           
   422  07F1                     __initialization:
   423                           
   424                           ; Initialize objects allocated to BANK0
   425  07F1  30BA               	movlw	low __pidataBANK0
   426  07F2  0084               	movwf	4
   427  07F3  3086               	movlw	(high __pidataBANK0)| (0+128)
   428  07F4  0085               	movwf	5
   429  07F5  303E               	movlw	low __pdataBANK0
   430  07F6  0086               	movwf	6
   431  07F7  3000               	movlw	high __pdataBANK0
   432  07F8  0087               	movwf	7
   433  07F9  3010               	movlw	16
   434  07FA  3186  2685  3187   	fcall	init_ram
   435  07FD                     end_of_initialization:	
   436                           ;End of C runtime variable initialization code
   437                           
   438  07FD                     __end_of__initialization:
   439  07FD  0020               	movlb	0
   440  07FE  3187  2F11         	ljmp	_main	;jump to C main() function
   441                           
   442                           	psect	dataBANK0
   443  003E                     __pdataBANK0:
   444  003E                     main@F2582:
   445  003E                     	ds	16
   446                           
   447                           	psect	inittext
   448  0685                     init_ram:
   449  0685  00FE               	movwf	btemp
   450  0686                     initloop:
   451  0686  0012               	moviw fsr0++
   452  0687  001E               	movwi fsr1++
   453  0688  0BFE               	decfsz	btemp,f
   454  0689  2E86               	goto	initloop
   455  068A  3400               	retlw	0
   456                           
   457                           	psect	cstackCOMMON
   458  0070                     __pcstackCOMMON:
   459  0070                     ?_pulseClock:
   460  0070                     ??_pulseClock:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_pulseLatch:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_pulseLatch:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_pulseWriteEn:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ??_pulseWriteEn:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_init:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ??_init:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_shiftOutByte:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     shiftOutByte@data:	
   488                           ; 2 bytes @ 0x0
   489                           
   490                           
   491                           ; 2 bytes @ 0x0
   492  0070                     	ds	2
   493  0072                     ??_shiftOutByte:
   494                           
   495                           ; 1 bytes @ 0x2
   496  0072                     	ds	4
   497  0076                     shiftOutByte@i:
   498                           
   499                           ; 2 bytes @ 0x6
   500  0076                     	ds	2
   501  0078                     ?_setAddress:
   502  0078                     setAddress@address:	
   503                           ; 1 bytes @ 0x8
   504                           
   505                           
   506                           ; 2 bytes @ 0x8
   507  0078                     	ds	2
   508  007A                     ??_setAddress:
   509                           
   510                           ; 1 bytes @ 0xA
   511  007A                     	ds	3
   512  007D                     ??_writeByteToEEPROM:
   513                           
   514                           ; 1 bytes @ 0xD
   515  007D                     	ds	1
   516                           
   517                           	psect	cstackBANK0
   518  0020                     __pcstackBANK0:
   519  0020                     ?_writeByteToEEPROM:
   520  0020                     writeByteToEEPROM@address:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 2 bytes @ 0x0
   525  0020                     	ds	2
   526  0022                     writeByteToEEPROM@data:
   527                           
   528                           ; 2 bytes @ 0x2
   529  0022                     	ds	2
   530  0024                     ?_writeArrayToEEPROM:
   531  0024                     writeArrayToEEPROM@arrSize:	
   532                           ; 1 bytes @ 0x4
   533                           
   534                           
   535                           ; 2 bytes @ 0x4
   536  0024                     	ds	2
   537  0026                     writeArrayToEEPROM@address:
   538                           
   539                           ; 2 bytes @ 0x6
   540  0026                     	ds	2
   541  0028                     ??_writeArrayToEEPROM:
   542                           
   543                           ; 1 bytes @ 0x8
   544  0028                     	ds	1
   545  0029                     writeArrayToEEPROM@arr:
   546                           
   547                           ; 1 bytes @ 0x9
   548  0029                     	ds	1
   549  002A                     writeArrayToEEPROM@i:
   550                           
   551                           ; 2 bytes @ 0xA
   552  002A                     	ds	2
   553  002C                     ??_main:
   554                           
   555                           ; 1 bytes @ 0xC
   556  002C                     	ds	1
   557  002D                     main@arr:
   558                           
   559                           ; 16 bytes @ 0xD
   560  002D                     	ds	16
   561  003D                     main@arrP:
   562                           
   563                           ; 1 bytes @ 0x1D
   564  003D                     	ds	1
   565                           
   566                           	psect	maintext
   567  0711                     __pmaintext:	
   568 ;;
   569 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   570 ;;
   571 ;; *************** function _main *****************
   572 ;; Defined at:
   573 ;;		line 91 in file "main.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  arr            16   13[BANK0 ] int [8]
   578 ;;  startingAddr    2    0        int 
   579 ;;  size            2    0        int 
   580 ;;  arrP            1   29[BANK0 ] PTR int 
   581 ;;		 -> main@arr(16), 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2   41[None  ] int 
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : B1F/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   592 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
   593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   594 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
   595 ;;Total ram usage:       18 bytes
   596 ;; Hardware stack levels required when called: 5
   597 ;; This function calls:
   598 ;;		_init
   599 ;;		_writeArrayToEEPROM
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           
   606                           ;psect for function _main
   607  0711                     _main:
   608  0711                     l877:	
   609                           ;incstack = 0
   610                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   611                           
   612                           
   613                           ;main.c: 93:     init();
   614  0711  3186  26AA  3187   	fcall	_init
   615  0714                     l879:
   616                           
   617                           ;main.c: 94:     _delay((unsigned long)((1000)*(500000/4000.0)));
   618  0714  30A3               	movlw	163
   619  0715  0020               	movlb	0	; select bank0
   620  0716  00AC               	movwf	??_main
   621  0717  3055               	movlw	85
   622  0718                     u117:
   623  0718  0B89               	decfsz	9,f
   624  0719  2F18               	goto	u117
   625  071A  0BAC               	decfsz	??_main,f
   626  071B  2F18               	goto	u117
   627  071C                     l881:
   628                           
   629                           ;main.c: 100:     int arr[] = {0x55,0xaa,0x55,0xaa,0x55,0xaa,0x55,0xaa};
   630  071C  303E               	movlw	low main@F2582
   631  071D  0086               	movwf	6
   632  071E  3000               	movlw	high main@F2582
   633  071F  0087               	movwf	7
   634  0720  302D               	movlw	low main@arr
   635  0721  0084               	movwf	4
   636  0722  3000               	movlw	high main@arr
   637  0723  0085               	movwf	5
   638  0724  3010               	movlw	16
   639  0725  0020               	movlb	0	; select bank0
   640  0726  00AC               	movwf	??_main
   641  0727                     u100:
   642  0727  0016               	moviw fsr1++
   643  0728  001A               	movwi fsr0++
   644  0729  0BAC               	decfsz	??_main,f
   645  072A  2F27               	goto	u100
   646  072B                     l883:
   647  072B                     l885:
   648  072B                     l887:
   649                           
   650                           ;main.c: 103:     int *arrP = &arr[0];
   651  072B  302D               	movlw	(low (main@arr| 0))& (0+255)
   652  072C  00AC               	movwf	??_main
   653  072D  082C               	movf	??_main,w
   654  072E  00BD               	movwf	main@arrP
   655  072F                     l889:
   656                           
   657                           ;main.c: 105:     writeArrayToEEPROM(arrP,size,startingAddress);
   658  072F  3008               	movlw	8
   659  0730  00A4               	movwf	writeArrayToEEPROM@arrSize
   660  0731  3000               	movlw	0
   661  0732  00A5               	movwf	writeArrayToEEPROM@arrSize+1
   662  0733  3000               	movlw	0
   663  0734  00A6               	movwf	writeArrayToEEPROM@address
   664  0735  00A7               	movwf	writeArrayToEEPROM@address+1
   665  0736  083D               	movf	main@arrP,w
   666  0737  3186  26E4  3187   	fcall	_writeArrayToEEPROM
   667  073A                     l891:
   668                           
   669                           ;main.c: 112:     PORTC = 0;
   670  073A  0020               	movlb	0	; select bank0
   671  073B  018E               	clrf	14	;volatile
   672  073C                     l893:
   673                           
   674                           ;main.c: 113:     PORTB = 0;
   675  073C  018D               	clrf	13	;volatile
   676  073D                     l895:
   677                           
   678                           ;main.c: 114:     PORTA = 0;
   679  073D  018C               	clrf	12	;volatile
   680  073E                     l44:	
   681                           ;main.c: 117:     while(1)
   682                           
   683  073E                     l45:	
   684                           ;main.c: 118:     {;main.c: 120:     }
   685                           
   686  073E  2F3E               	goto	l44
   687  073F  3180  2802         	ljmp	start
   688  0741                     __end_of_main:
   689                           
   690                           	psect	text1
   691  06E4                     __ptext1:	
   692 ;; *************** function _writeArrayToEEPROM *****************
   693 ;; Defined at:
   694 ;;		line 171 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  arr             1    wreg     PTR int 
   697 ;;		 -> main@arr(16), 
   698 ;;  arrSize         2    4[BANK0 ] int 
   699 ;;  address         2    6[BANK0 ] int 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;  arr             1    9[BANK0 ] PTR int 
   702 ;;		 -> main@arr(16), 
   703 ;;  i               2   10[BANK0 ] int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   714 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;Total ram usage:        8 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 4
   720 ;; This function calls:
   721 ;;		_writeByteToEEPROM
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function _writeArrayToEEPROM
   729  06E4                     _writeArrayToEEPROM:
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in _writeArrayToEEPROM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   733                           ;writeArrayToEEPROM@arr stored from wreg
   734  06E4  0020               	movlb	0	; select bank0
   735  06E5  00A9               	movwf	writeArrayToEEPROM@arr
   736  06E6                     l869:
   737                           
   738                           ;main.c: 171: void writeArrayToEEPROM(int *arr, int arrSize, int address);main.c: 172: {
      +                          ;main.c: 173:     int i;;main.c: 174:     for(i=0;i<arrSize;i++)
   739  06E6  01AA               	clrf	writeArrayToEEPROM@i
   740  06E7  01AB               	clrf	writeArrayToEEPROM@i+1
   741  06E8  2F02               	goto	l875
   742  06E9                     l871:
   743                           
   744                           ;main.c: 175:     {;main.c: 176:         writeByteToEEPROM(address+i, *(arr+i));
   745  06E9  0020               	movlb	0	; select bank0
   746  06EA  082A               	movf	writeArrayToEEPROM@i,w
   747  06EB  0726               	addwf	writeArrayToEEPROM@address,w
   748  06EC  00A0               	movwf	writeByteToEEPROM@address
   749  06ED  082B               	movf	writeArrayToEEPROM@i+1,w
   750  06EE  3D27               	addwfc	writeArrayToEEPROM@address+1,w
   751  06EF  00A1               	movwf	writeByteToEEPROM@address+1
   752  06F0  352A               	lslf	writeArrayToEEPROM@i,w
   753  06F1  0729               	addwf	writeArrayToEEPROM@arr,w
   754  06F2  00A8               	movwf	??_writeArrayToEEPROM
   755  06F3  0828               	movf	??_writeArrayToEEPROM,w
   756  06F4  0086               	movwf	6
   757  06F5  0187               	clrf	7
   758  06F6  3F40               	moviw [0]fsr1
   759  06F7  00A2               	movwf	writeByteToEEPROM@data
   760  06F8  3F41               	moviw [1]fsr1
   761  06F9  00A3               	movwf	writeByteToEEPROM@data+1
   762  06FA  3187  2774  3186   	fcall	_writeByteToEEPROM
   763  06FD                     l873:
   764                           
   765                           ;main.c: 177:     }
   766  06FD  3001               	movlw	1
   767  06FE  0020               	movlb	0	; select bank0
   768  06FF  07AA               	addwf	writeArrayToEEPROM@i,f
   769  0700  3000               	movlw	0
   770  0701  3DAB               	addwfc	writeArrayToEEPROM@i+1,f
   771  0702                     l875:
   772  0702  082B               	movf	writeArrayToEEPROM@i+1,w
   773  0703  3A80               	xorlw	128
   774  0704  00A8               	movwf	??_writeArrayToEEPROM
   775  0705  0825               	movf	writeArrayToEEPROM@arrSize+1,w
   776  0706  3A80               	xorlw	128
   777  0707  0228               	subwf	??_writeArrayToEEPROM,w
   778  0708  1D03               	skipz
   779  0709  2F0C               	goto	u95
   780  070A  0824               	movf	writeArrayToEEPROM@arrSize,w
   781  070B  022A               	subwf	writeArrayToEEPROM@i,w
   782  070C                     u95:
   783  070C  1C03               	skipc
   784  070D  2F0F               	goto	u91
   785  070E  2F10               	goto	u90
   786  070F                     u91:
   787  070F  2EE9               	goto	l871
   788  0710                     u90:
   789  0710                     l64:
   790  0710  0008               	return
   791  0711                     __end_of_writeArrayToEEPROM:
   792                           
   793                           	psect	text2
   794  0774                     __ptext2:	
   795 ;; *************** function _writeByteToEEPROM *****************
   796 ;; Defined at:
   797 ;;		line 146 in file "main.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  address         2    0[BANK0 ] int 
   800 ;;  data            2    2[BANK0 ] int 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0, pclath, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   815 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   816 ;;Total ram usage:        5 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 3
   819 ;; This function calls:
   820 ;;		_pulseWriteEn
   821 ;;		_setAddress
   822 ;; This function is called by:
   823 ;;		_writeArrayToEEPROM
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _writeByteToEEPROM
   829  0774                     _writeByteToEEPROM:
   830  0774                     l827:	
   831                           ;incstack = 0
   832                           ; Regs used in _writeByteToEEPROM: [wreg+status,2+status,0+pclath+cstack]
   833                           
   834                           
   835                           ;main.c: 146: void writeByteToEEPROM(int address, int data);main.c: 147: {;main.c: 148: 
      +                              setAddress(address);
   836  0774  0020               	movlb	0	; select bank0
   837  0775  0821               	movf	writeByteToEEPROM@address+1,w
   838  0776  00F9               	movwf	setAddress@address+1
   839  0777  0820               	movf	writeByteToEEPROM@address,w
   840  0778  00F8               	movwf	setAddress@address
   841  0779  3186  26CA  3187   	fcall	_setAddress
   842  077C                     l829:
   843                           
   844                           ;main.c: 149:     _delay((unsigned long)((500)*(500000/4000000.0)));
   845  077C  3014               	movlw	20
   846  077D                     u127:
   847  077D  0B89               	decfsz	9,f
   848  077E  2F7D               	goto	u127
   849  077F  3200               	nop2
   850  0780                     l831:
   851                           
   852                           ;main.c: 151:     PORTAbits.RA0 = 1 & data;
   853  0780  3001               	movlw	1
   854  0781  0020               	movlb	0	; select bank0
   855  0782  0522               	andwf	writeByteToEEPROM@data,w
   856  0783  00FD               	movwf	??_writeByteToEEPROM
   857  0784  080C               	movf	12,w	;volatile
   858  0785  067D               	xorwf	??_writeByteToEEPROM,w
   859  0786  39FE               	andlw	-2
   860  0787  067D               	xorwf	??_writeByteToEEPROM,w
   861  0788  008C               	movwf	12	;volatile
   862  0789                     l833:
   863                           
   864                           ;main.c: 152:     data = data >> 1;
   865  0789  0D23               	rlf	writeByteToEEPROM@data+1,w
   866  078A  0C23               	rrf	writeByteToEEPROM@data+1,w
   867  078B  00A3               	movwf	writeByteToEEPROM@data+1
   868  078C  0C22               	rrf	writeByteToEEPROM@data,w
   869  078D  00A2               	movwf	writeByteToEEPROM@data
   870  078E                     l835:
   871                           
   872                           ;main.c: 153:     PORTAbits.RA1 = 1 & data;
   873  078E  0822               	movf	writeByteToEEPROM@data,w
   874  078F  3901               	andlw	1
   875  0790  00FD               	movwf	??_writeByteToEEPROM
   876  0791  0DFD               	rlf	??_writeByteToEEPROM,f
   877  0792  080C               	movf	12,w	;volatile
   878  0793  067D               	xorwf	??_writeByteToEEPROM,w
   879  0794  39FD               	andlw	-3
   880  0795  067D               	xorwf	??_writeByteToEEPROM,w
   881  0796  008C               	movwf	12	;volatile
   882  0797                     l837:
   883                           
   884                           ;main.c: 154:     data = data >> 1;
   885  0797  0D23               	rlf	writeByteToEEPROM@data+1,w
   886  0798  0C23               	rrf	writeByteToEEPROM@data+1,w
   887  0799  00A3               	movwf	writeByteToEEPROM@data+1
   888  079A  0C22               	rrf	writeByteToEEPROM@data,w
   889  079B  00A2               	movwf	writeByteToEEPROM@data
   890  079C                     l839:
   891                           
   892                           ;main.c: 155:     PORTAbits.RA2 = 1 & data;
   893  079C  0822               	movf	writeByteToEEPROM@data,w
   894  079D  3901               	andlw	1
   895  079E  00FD               	movwf	??_writeByteToEEPROM
   896  079F  0DFD               	rlf	??_writeByteToEEPROM,f
   897  07A0  0DFD               	rlf	??_writeByteToEEPROM,f
   898  07A1  080C               	movf	12,w	;volatile
   899  07A2  067D               	xorwf	??_writeByteToEEPROM,w
   900  07A3  39FB               	andlw	-5
   901  07A4  067D               	xorwf	??_writeByteToEEPROM,w
   902  07A5  008C               	movwf	12	;volatile
   903  07A6                     l841:
   904                           
   905                           ;main.c: 156:     data = data >> 1;
   906  07A6  0D23               	rlf	writeByteToEEPROM@data+1,w
   907  07A7  0C23               	rrf	writeByteToEEPROM@data+1,w
   908  07A8  00A3               	movwf	writeByteToEEPROM@data+1
   909  07A9  0C22               	rrf	writeByteToEEPROM@data,w
   910  07AA  00A2               	movwf	writeByteToEEPROM@data
   911  07AB                     l843:
   912                           
   913                           ;main.c: 157:     PORTCbits.RC0 = 1 & data;
   914  07AB  3001               	movlw	1
   915  07AC  0522               	andwf	writeByteToEEPROM@data,w
   916  07AD  00FD               	movwf	??_writeByteToEEPROM
   917  07AE  080E               	movf	14,w	;volatile
   918  07AF  067D               	xorwf	??_writeByteToEEPROM,w
   919  07B0  39FE               	andlw	-2
   920  07B1  067D               	xorwf	??_writeByteToEEPROM,w
   921  07B2  008E               	movwf	14	;volatile
   922  07B3                     l845:
   923                           
   924                           ;main.c: 158:     data = data >> 1;
   925  07B3  0D23               	rlf	writeByteToEEPROM@data+1,w
   926  07B4  0C23               	rrf	writeByteToEEPROM@data+1,w
   927  07B5  00A3               	movwf	writeByteToEEPROM@data+1
   928  07B6  0C22               	rrf	writeByteToEEPROM@data,w
   929  07B7  00A2               	movwf	writeByteToEEPROM@data
   930  07B8                     l847:
   931                           
   932                           ;main.c: 159:     PORTCbits.RC1 = 1 & data;
   933  07B8  0822               	movf	writeByteToEEPROM@data,w
   934  07B9  3901               	andlw	1
   935  07BA  00FD               	movwf	??_writeByteToEEPROM
   936  07BB  0DFD               	rlf	??_writeByteToEEPROM,f
   937  07BC  080E               	movf	14,w	;volatile
   938  07BD  067D               	xorwf	??_writeByteToEEPROM,w
   939  07BE  39FD               	andlw	-3
   940  07BF  067D               	xorwf	??_writeByteToEEPROM,w
   941  07C0  008E               	movwf	14	;volatile
   942  07C1                     l849:
   943                           
   944                           ;main.c: 160:     data = data >> 1;
   945  07C1  0D23               	rlf	writeByteToEEPROM@data+1,w
   946  07C2  0C23               	rrf	writeByteToEEPROM@data+1,w
   947  07C3  00A3               	movwf	writeByteToEEPROM@data+1
   948  07C4  0C22               	rrf	writeByteToEEPROM@data,w
   949  07C5  00A2               	movwf	writeByteToEEPROM@data
   950  07C6                     l851:
   951                           
   952                           ;main.c: 161:     PORTCbits.RC2 = 1 & data;
   953  07C6  0822               	movf	writeByteToEEPROM@data,w
   954  07C7  3901               	andlw	1
   955  07C8  00FD               	movwf	??_writeByteToEEPROM
   956  07C9  0DFD               	rlf	??_writeByteToEEPROM,f
   957  07CA  0DFD               	rlf	??_writeByteToEEPROM,f
   958  07CB  080E               	movf	14,w	;volatile
   959  07CC  067D               	xorwf	??_writeByteToEEPROM,w
   960  07CD  39FB               	andlw	-5
   961  07CE  067D               	xorwf	??_writeByteToEEPROM,w
   962  07CF  008E               	movwf	14	;volatile
   963  07D0                     l853:
   964                           
   965                           ;main.c: 162:     data = data >> 1;
   966  07D0  0D23               	rlf	writeByteToEEPROM@data+1,w
   967  07D1  0C23               	rrf	writeByteToEEPROM@data+1,w
   968  07D2  00A3               	movwf	writeByteToEEPROM@data+1
   969  07D3  0C22               	rrf	writeByteToEEPROM@data,w
   970  07D4  00A2               	movwf	writeByteToEEPROM@data
   971  07D5                     l855:
   972                           
   973                           ;main.c: 163:     PORTBbits.RB4 = 1 & data;
   974  07D5  0822               	movf	writeByteToEEPROM@data,w
   975  07D6  3901               	andlw	1
   976  07D7  00FD               	movwf	??_writeByteToEEPROM
   977  07D8  0EFD               	swapf	??_writeByteToEEPROM,f
   978  07D9  080D               	movf	13,w	;volatile
   979  07DA  067D               	xorwf	??_writeByteToEEPROM,w
   980  07DB  39EF               	andlw	-17
   981  07DC  067D               	xorwf	??_writeByteToEEPROM,w
   982  07DD  008D               	movwf	13	;volatile
   983  07DE                     l857:
   984                           
   985                           ;main.c: 164:     data = data >> 1;
   986  07DE  0D23               	rlf	writeByteToEEPROM@data+1,w
   987  07DF  0C23               	rrf	writeByteToEEPROM@data+1,w
   988  07E0  00A3               	movwf	writeByteToEEPROM@data+1
   989  07E1  0C22               	rrf	writeByteToEEPROM@data,w
   990  07E2  00A2               	movwf	writeByteToEEPROM@data
   991  07E3                     l859:
   992                           
   993                           ;main.c: 165:     PORTBbits.RB5 = 1 & data;
   994  07E3  0822               	movf	writeByteToEEPROM@data,w
   995  07E4  3901               	andlw	1
   996  07E5  00FD               	movwf	??_writeByteToEEPROM
   997  07E6  0EFD               	swapf	??_writeByteToEEPROM,f
   998  07E7  0DFD               	rlf	??_writeByteToEEPROM,f
   999  07E8  080D               	movf	13,w	;volatile
  1000  07E9  067D               	xorwf	??_writeByteToEEPROM,w
  1001  07EA  39DF               	andlw	-33
  1002  07EB  067D               	xorwf	??_writeByteToEEPROM,w
  1003  07EC  008D               	movwf	13	;volatile
  1004                           
  1005                           ;main.c: 167:     pulseWriteEn();
  1006  07ED  3186  269D  3187   	fcall	_pulseWriteEn
  1007  07F0                     l58:
  1008  07F0  0008               	return
  1009  07F1                     __end_of_writeByteToEEPROM:
  1010                           
  1011                           	psect	text3
  1012  06CA                     __ptext3:	
  1013 ;; *************** function _setAddress *****************
  1014 ;; Defined at:
  1015 ;;		line 139 in file "main.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  address         2    8[COMMON] int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1031 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1032 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1033 ;;Total ram usage:        5 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 2
  1036 ;; This function calls:
  1037 ;;		_shiftOutByte
  1038 ;; This function is called by:
  1039 ;;		_writeByteToEEPROM
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           
  1044                           ;psect for function _setAddress
  1045  06CA                     _setAddress:
  1046  06CA                     l819:	
  1047                           ;incstack = 0
  1048                           ; Regs used in _setAddress: [wreg+status,2+status,0+pclath+cstack]
  1049                           
  1050                           
  1051                           ;main.c: 139: void setAddress(int address);main.c: 140: {;main.c: 141:     shiftOutByte(
      +                          address >> 8);
  1052  06CA  0879               	movf	setAddress@address+1,w
  1053  06CB  00FB               	movwf	??_setAddress+1
  1054  06CC  0878               	movf	setAddress@address,w
  1055  06CD  00FA               	movwf	??_setAddress
  1056  06CE  3008               	movlw	8
  1057  06CF  00FC               	movwf	??_setAddress+2
  1058  06D0                     u85:
  1059  06D0  0D7B               	rlf	??_setAddress+1,w
  1060  06D1  0CFB               	rrf	??_setAddress+1,f
  1061  06D2  0CFA               	rrf	??_setAddress,f
  1062  06D3  0BFC               	decfsz	??_setAddress+2,f
  1063  06D4  2ED0               	goto	u85
  1064  06D5  087A               	movf	??_setAddress,w
  1065  06D6  00F0               	movwf	shiftOutByte@data
  1066  06D7  087B               	movf	??_setAddress+1,w
  1067  06D8  00F1               	movwf	shiftOutByte@data+1
  1068  06D9  3187  2741  3186   	fcall	_shiftOutByte
  1069                           
  1070                           ;main.c: 142:     shiftOutByte(address);
  1071  06DC  0879               	movf	setAddress@address+1,w
  1072  06DD  00F1               	movwf	shiftOutByte@data+1
  1073  06DE  0878               	movf	setAddress@address,w
  1074  06DF  00F0               	movwf	shiftOutByte@data
  1075  06E0  3187  2741  3186   	fcall	_shiftOutByte
  1076  06E3                     l55:
  1077  06E3  0008               	return
  1078  06E4                     __end_of_setAddress:
  1079                           
  1080                           	psect	text4
  1081  0741                     __ptext4:	
  1082 ;; *************** function _shiftOutByte *****************
  1083 ;; Defined at:
  1084 ;;		line 126 in file "main.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  data            2    0[COMMON] int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  i               2    6[COMMON] int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1102 ;;Total ram usage:        8 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 1
  1105 ;; This function calls:
  1106 ;;		_pulseClock
  1107 ;;		_pulseLatch
  1108 ;; This function is called by:
  1109 ;;		_setAddress
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _shiftOutByte
  1115  0741                     _shiftOutByte:
  1116  0741                     l801:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _shiftOutByte: [wreg+status,2+status,0+pclath+cstack]
  1119                           
  1120                           
  1121                           ;main.c: 126: void shiftOutByte(int data);main.c: 127: {;main.c: 128:     int i;;main.c:
      +                           129:     for(i=0;i<8;i++)
  1122  0741  01F6               	clrf	shiftOutByte@i
  1123  0742  01F7               	clrf	shiftOutByte@i+1
  1124  0743                     l807:
  1125                           
  1126                           ;main.c: 130:     {;main.c: 131:         PORTAbits.RA4 = (0b10000000 & data) >> 7;
  1127  0743  0871               	movf	shiftOutByte@data+1,w
  1128  0744  00F3               	movwf	??_shiftOutByte+1
  1129  0745  0870               	movf	shiftOutByte@data,w
  1130  0746  00F2               	movwf	??_shiftOutByte
  1131  0747  3007               	movlw	7
  1132  0748  00F4               	movwf	??_shiftOutByte+2
  1133  0749                     u65:
  1134  0749  0D73               	rlf	??_shiftOutByte+1,w
  1135  074A  0CF3               	rrf	??_shiftOutByte+1,f
  1136  074B  0CF2               	rrf	??_shiftOutByte,f
  1137  074C  0BF4               	decfsz	??_shiftOutByte+2,f
  1138  074D  2F49               	goto	u65
  1139  074E  0872               	movf	??_shiftOutByte,w
  1140  074F  3901               	andlw	1
  1141  0750  00F5               	movwf	??_shiftOutByte+3
  1142  0751  0EF5               	swapf	??_shiftOutByte+3,f
  1143  0752  0020               	movlb	0	; select bank0
  1144  0753  080C               	movf	12,w	;volatile
  1145  0754  0675               	xorwf	??_shiftOutByte+3,w
  1146  0755  39EF               	andlw	-17
  1147  0756  0675               	xorwf	??_shiftOutByte+3,w
  1148  0757  008C               	movwf	12	;volatile
  1149  0758                     l809:
  1150                           
  1151                           ;main.c: 132:         data = data << 1;
  1152  0758  3570               	lslf	shiftOutByte@data,w
  1153  0759  00F0               	movwf	shiftOutByte@data
  1154  075A  0D71               	rlf	shiftOutByte@data+1,w
  1155  075B  00F1               	movwf	shiftOutByte@data+1
  1156  075C                     l811:
  1157                           
  1158                           ;main.c: 133:         pulseClock();
  1159  075C  3186  268B  3187   	fcall	_pulseClock
  1160  075F                     l813:
  1161                           
  1162                           ;main.c: 134:     }
  1163  075F  3001               	movlw	1
  1164  0760  07F6               	addwf	shiftOutByte@i,f
  1165  0761  3000               	movlw	0
  1166  0762  3DF7               	addwfc	shiftOutByte@i+1,f
  1167  0763                     l815:
  1168  0763  0877               	movf	shiftOutByte@i+1,w
  1169  0764  3A80               	xorlw	128
  1170  0765  00F2               	movwf	??_shiftOutByte
  1171  0766  3080               	movlw	128
  1172  0767  0272               	subwf	??_shiftOutByte,w
  1173  0768  1D03               	skipz
  1174  0769  2F6C               	goto	u75
  1175  076A  3008               	movlw	8
  1176  076B  0276               	subwf	shiftOutByte@i,w
  1177  076C                     u75:
  1178  076C  1C03               	skipc
  1179  076D  2F6F               	goto	u71
  1180  076E  2F70               	goto	u70
  1181  076F                     u71:
  1182  076F  2F43               	goto	l807
  1183  0770                     u70:
  1184  0770                     l817:
  1185                           
  1186                           ;main.c: 135:     pulseLatch();
  1187  0770  3186  2694  3187   	fcall	_pulseLatch
  1188  0773                     l52:
  1189  0773  0008               	return
  1190  0774                     __end_of_shiftOutByte:
  1191                           
  1192                           	psect	text5
  1193  0694                     __ptext5:	
  1194 ;; *************** function _pulseLatch *****************
  1195 ;; Defined at:
  1196 ;;		line 199 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1214 ;;Total ram usage:        0 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_shiftOutByte
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _pulseLatch
  1225  0694                     _pulseLatch:
  1226  0694                     l795:	
  1227                           ;incstack = 0
  1228                           ; Regs used in _pulseLatch: [wreg]
  1229                           
  1230                           
  1231                           ;main.c: 201:     PORTCbits.RC3 = 1;
  1232  0694  0020               	movlb	0	; select bank0
  1233  0695  158E               	bsf	14,3	;volatile
  1234  0696                     l797:
  1235                           
  1236                           ;main.c: 202:     _delay((unsigned long)((500)*(500000/4000000.0)));
  1237  0696  3014               	movlw	20
  1238  0697                     u137:
  1239  0697  0B89               	decfsz	9,f
  1240  0698  2E97               	goto	u137
  1241  0699  3200               	nop2
  1242  069A                     l799:
  1243                           
  1244                           ;main.c: 203:     PORTCbits.RC3 = 0;
  1245  069A  0020               	movlb	0	; select bank0
  1246  069B  118E               	bcf	14,3	;volatile
  1247  069C                     l73:
  1248  069C  0008               	return
  1249  069D                     __end_of_pulseLatch:
  1250                           
  1251                           	psect	text6
  1252  068B                     __ptext6:	
  1253 ;; *************** function _pulseClock *****************
  1254 ;; Defined at:
  1255 ;;		line 191 in file "main.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_shiftOutByte
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _pulseClock
  1284  068B                     _pulseClock:
  1285  068B                     l789:	
  1286                           ;incstack = 0
  1287                           ; Regs used in _pulseClock: [wreg]
  1288                           
  1289                           
  1290                           ;main.c: 193:     PORTCbits.RC6 = 1;
  1291  068B  0020               	movlb	0	; select bank0
  1292  068C  170E               	bsf	14,6	;volatile
  1293  068D                     l791:
  1294                           
  1295                           ;main.c: 194:     _delay((unsigned long)((500)*(500000/4000000.0)));
  1296  068D  3014               	movlw	20
  1297  068E                     u147:
  1298  068E  0B89               	decfsz	9,f
  1299  068F  2E8E               	goto	u147
  1300  0690  3200               	nop2
  1301  0691                     l793:
  1302                           
  1303                           ;main.c: 195:     PORTCbits.RC6 = 0;
  1304  0691  0020               	movlb	0	; select bank0
  1305  0692  130E               	bcf	14,6	;volatile
  1306  0693                     l70:
  1307  0693  0008               	return
  1308  0694                     __end_of_pulseClock:
  1309                           
  1310                           	psect	text7
  1311  069D                     __ptext7:	
  1312 ;; *************** function _pulseWriteEn *****************
  1313 ;; Defined at:
  1314 ;;		line 181 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1332 ;;Total ram usage:        0 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_writeByteToEEPROM
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _pulseWriteEn
  1343  069D                     _pulseWriteEn:
  1344  069D                     l821:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _pulseWriteEn: [wreg]
  1347                           
  1348                           
  1349                           ;main.c: 183:     _delay((unsigned long)((800)*(500000/4000000.0)));
  1350  069D  3021               	movlw	33
  1351  069E                     u157:
  1352  069E  0B89               	decfsz	9,f
  1353  069F  2E9E               	goto	u157
  1354  06A0  0000               	nop
  1355  06A1                     l823:
  1356                           
  1357                           ;main.c: 184:     PORTCbits.RC7 = 0;
  1358  06A1  0020               	movlb	0	; select bank0
  1359  06A2  138E               	bcf	14,7	;volatile
  1360                           
  1361                           ;main.c: 185:     _delay((unsigned long)((800)*(500000/4000000.0)));
  1362  06A3  3021               	movlw	33
  1363  06A4                     u167:
  1364  06A4  0B89               	decfsz	9,f
  1365  06A5  2EA4               	goto	u167
  1366  06A6  0000               	nop
  1367  06A7                     l825:
  1368                           
  1369                           ;main.c: 186:     PORTCbits.RC7 = 1;
  1370  06A7  0020               	movlb	0	; select bank0
  1371  06A8  178E               	bsf	14,7	;volatile
  1372  06A9                     l67:
  1373  06A9  0008               	return
  1374  06AA                     __end_of_pulseWriteEn:
  1375                           
  1376                           	psect	text8
  1377  06AA                     __ptext8:	
  1378 ;; *************** function _init *****************
  1379 ;; Defined at:
  1380 ;;		line 74 in file "main.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           
  1408                           ;psect for function _init
  1409  06AA                     _init:
  1410  06AA                     l861:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _init: [status,2]
  1413                           
  1414                           
  1415                           ;main.c: 76:     ANSELA = 0;
  1416  06AA  0023               	movlb	3	; select bank3
  1417  06AB  018C               	clrf	12	;volatile
  1418                           
  1419                           ;main.c: 77:     ANSELB = 0;
  1420  06AC  018D               	clrf	13	;volatile
  1421                           
  1422                           ;main.c: 78:     ANSELC = 0;
  1423  06AD  018E               	clrf	14	;volatile
  1424                           
  1425                           ;main.c: 79:     TRISA = 0;
  1426  06AE  0021               	movlb	1	; select bank1
  1427  06AF  018C               	clrf	12	;volatile
  1428                           
  1429                           ;main.c: 80:     TRISB = 0;
  1430  06B0  018D               	clrf	13	;volatile
  1431                           
  1432                           ;main.c: 81:     TRISC = 0;
  1433  06B1  018E               	clrf	14	;volatile
  1434                           
  1435                           ;main.c: 82:     PORTA = 0;
  1436  06B2  0020               	movlb	0	; select bank0
  1437  06B3  018C               	clrf	12	;volatile
  1438                           
  1439                           ;main.c: 83:     PORTB = 0;
  1440  06B4  018D               	clrf	13	;volatile
  1441                           
  1442                           ;main.c: 84:     PORTC = 0;
  1443  06B5  018E               	clrf	14	;volatile
  1444  06B6                     l863:
  1445                           
  1446                           ;main.c: 85:     PORTCbits.RC6 = 0;
  1447  06B6  130E               	bcf	14,6	;volatile
  1448  06B7                     l865:
  1449                           
  1450                           ;main.c: 86:     PORTCbits.RC3 = 0;
  1451  06B7  118E               	bcf	14,3	;volatile
  1452  06B8                     l867:
  1453                           
  1454                           ;main.c: 87:     PORTCbits.RC7 = 1;
  1455  06B8  178E               	bsf	14,7	;volatile
  1456  06B9                     l37:
  1457  06B9  0008               	return
  1458  06BA                     __end_of_init:
  1459  007E                     btemp	set	126	;btemp
  1460  007E                     wtemp0	set	126
  1461                           
  1462                           	psect	config
  1463                           
  1464                           ;Config register CONFIG1 @ 0x8007
  1465                           ;	Oscillator Selection
  1466                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1467                           ;	Watchdog Timer Enable
  1468                           ;	WDTE = OFF, WDT disabled
  1469                           ;	Power-up Timer Enable
  1470                           ;	PWRTE = OFF, PWRT disabled
  1471                           ;	MCLR Pin Function Select
  1472                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  1473                           ;	Flash Program Memory Code Protection
  1474                           ;	CP = OFF, Program memory code protection is disabled
  1475                           ;	Data Memory Code Protection
  1476                           ;	CPD = OFF, Data memory code protection is disabled
  1477                           ;	Brown-out Reset Enable
  1478                           ;	BOREN = OFF, Brown-out Reset disabled
  1479                           ;	Clock Out Enable
  1480                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1481                           ;	Internal/External Switchover
  1482                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1483                           ;	Fail-Safe Clock Monitor Enable
  1484                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1485  8007                     	org	32775
  1486  8007  09A4               	dw	2468
  1487                           
  1488                           ;Config register CONFIG2 @ 0x8008
  1489                           ;	Flash Memory Self-Write Protection
  1490                           ;	WRT = OFF, Write protection off
  1491                           ;	PLL Enable
  1492                           ;	PLLEN = OFF, 4x PLL disabled
  1493                           ;	Stack Overflow/Underflow Reset Enable
  1494                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  1495                           ;	Brown-out Reset Voltage Selection
  1496                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1497                           ;	Low-Voltage Programming Enable
  1498                           ;	LVP = ON, Low-voltage programming enabled
  1499  8008                     	org	32776
  1500  8008  3CFF               	dw	15615

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    writeArrayToEEPROM@arr	PTR int  size(1) Largest target is 16
		 -> main@arr(BANK0[16]), 

    main@arrP	PTR int  size(1) Largest target is 16
		 -> main@arr(BANK0[16]), 


Critical Paths under _main in COMMON

    _writeArrayToEEPROM->_writeByteToEEPROM
    _writeByteToEEPROM->_setAddress
    _setAddress->_shiftOutByte

Critical Paths under _main in BANK0

    _main->_writeArrayToEEPROM
    _writeArrayToEEPROM->_writeByteToEEPROM

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    1286
                                             12 BANK0     18    18      0
                               _init
                 _writeArrayToEEPROM
 ---------------------------------------------------------------------------------
 (1) _writeArrayToEEPROM                                   8     4      4    1193
                                              4 BANK0      8     4      4
                  _writeByteToEEPROM
 ---------------------------------------------------------------------------------
 (2) _writeByteToEEPROM                                    5     1      4     874
                                             13 COMMON     1     1      0
                                              0 BANK0      4     0      4
                       _pulseWriteEn
                         _setAddress
 ---------------------------------------------------------------------------------
 (3) _setAddress                                           5     3      2     363
                                              8 COMMON     5     3      2
                       _shiftOutByte
 ---------------------------------------------------------------------------------
 (4) _shiftOutByte                                         8     6      2     243
                                              0 COMMON     8     6      2
                         _pulseClock
                         _pulseLatch
 ---------------------------------------------------------------------------------
 (5) _pulseLatch                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pulseClock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pulseWriteEn                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _writeArrayToEEPROM
     _writeByteToEEPROM
       _pulseWriteEn
       _setAddress
         _shiftOutByte
           _pulseClock
           _pulseLatch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      2E       5       57.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Apr 25 20:54:32 2021

                         l52 0773                           l44 073E                           l37 06B9  
                         l45 073E                           l70 0693                           l55 06E3  
                         l64 0710                           l73 069C                           l58 07F0  
                         l67 06A9                           u70 0770                           u71 076F  
                         u65 0749                           u90 0710                           u75 076C  
                         u91 070F                           u85 06D0                           u95 070C  
                        l801 0741                          l811 075C                          l821 069D  
                        l813 075F                          l823 06A1                          l815 0763  
                        l807 0743                          l831 0780                          l825 06A7  
                        l817 0770                          l809 0758                          l841 07A6  
                        l833 0789                          l819 06CA                          l851 07C6  
                        l843 07AB                          l835 078E                          l827 0774  
                        l861 06AA                          l853 07D0                          l845 07B3  
                        l837 0797                          l829 077C                          l863 06B6  
                        l791 068D                          l855 07D5                          l847 07B8  
                        l839 079C                          l871 06E9                          l865 06B7  
                        l793 0691                          l857 07DE                          l849 07C1  
                        l873 06FD                          l881 071C                          l867 06B8  
                        l795 0694                          l859 07E3                          l875 0702  
                        l891 073A                          l883 072B                          l789 068B  
                        l797 0696                          l869 06E6                          l893 073C  
                        l885 072B                          l877 0711                          l799 069A  
                        l895 073D                          l887 072B                          l879 0714  
                        l889 072F                          u100 0727                          u117 0718  
                        u127 077D                          u137 0697                          u147 068E  
                        u157 069E                          u167 06A4                 _pulseWriteEn 069D  
                        wreg 0009                         _main 0711                         _init 06AA  
                       fsr0h 0005                         fsr1h 0007                         fsr0l 0004  
                       fsr1l 0006                         btemp 007E                         start 0002  
      writeByteToEEPROM@data 0022                        ?_main 0070                        ?_init 0070  
                      _PORTA 000C                        _PORTB 000D                        _PORTC 000E  
                      _TRISA 008C                        _TRISB 008D                        _TRISC 008E  
                      wtemp0 007E              __initialization 07F1                 __end_of_main 0741  
               __end_of_init 06BA                       ??_main 002C                       ??_init 0070  
                     _ANSELA 018C                       _ANSELB 018D                       _ANSELC 018E  
    __end_of__initialization 07FD               __pcstackCOMMON 0070                 __pidataBANK0 06BA  
__size_of_writeArrayToEEPROM 002D                   __pmaintext 0711        writeArrayToEEPROM@arr 0029  
              ?_shiftOutByte 0070                      __ptext1 06E4                      __ptext2 0774  
                    __ptext3 06CA                      __ptext4 0741                      __ptext5 0694  
                    __ptext6 068B                      __ptext7 069D                      __ptext8 06AA  
           shiftOutByte@data 0070                   _setAddress 06CA                      main@arr 002D  
       end_of_initialization 07FD               ??_shiftOutByte 0072                      init_ram 0685  
                    initloop 0686                    _PORTAbits 000C                    _PORTBbits 000D  
                  _PORTCbits 000E                   _pulseClock 068B                   _pulseLatch 0694  
              ?_pulseWriteEn 0070            _writeByteToEEPROM 0774          start_initialization 07F1  
  writeArrayToEEPROM@address 0026                  ?_setAddress 0078           ?_writeByteToEEPROM 0020  
  writeArrayToEEPROM@arrSize 0024          ??_writeByteToEEPROM 007D   __end_of_writeArrayToEEPROM 0711  
                __pdataBANK0 003E         __end_of_shiftOutByte 0774    __end_of_writeByteToEEPROM 07F1  
   writeByteToEEPROM@address 0020               ??_pulseWriteEn 0070                    ___latbits 0002  
              __pcstackBANK0 0020                  ?_pulseClock 0070                  ?_pulseLatch 0070  
        __size_of_setAddress 001A                shiftOutByte@i 0076            setAddress@address 0078  
                  main@F2582 003E          __size_of_pulseClock 0009          __size_of_pulseLatch 0009  
 __size_of_writeByteToEEPROM 007D         __end_of_pulseWriteEn 06AA        __size_of_shiftOutByte 0033  
               ??_setAddress 007A          writeArrayToEEPROM@i 002A                 _shiftOutByte 0741  
              __size_of_main 0030                __size_of_init 0010           __end_of_setAddress 06E4  
                   main@arrP 003D           _writeArrayToEEPROM 06E4                 ??_pulseClock 0070  
               ??_pulseLatch 0070          ?_writeArrayToEEPROM 0024         ??_writeArrayToEEPROM 0028  
         __end_of_pulseClock 0694           __end_of_pulseLatch 069D        __size_of_pulseWriteEn 000D  
